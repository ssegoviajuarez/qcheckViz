# Chunk 1: setup
#knitr::opts_chunk$set(echo = TRUE)
# PART 0: Clear boiler plate --------------------------------------------------
#rm(list=ls())
#memory.size()
# PART 1: Select sections to run ----------------------------------------------
PACKAGES             <- 0
others               <- 0
# PART 2: Load packages   -----------------------------------------------------
packages  <- c("shiny","tidyverse","readxl",
"plotly", "gridExtra","shinyWidgets",
"formattable","data.table","DT","htmlwidgets")
# Install all packages
if (PACKAGES) {
install.packages(packages,
dependencies = TRUE)
}
# Load all packages
invisible(sapply(packages, library, character.only = TRUE))
# Chunk 2
# UI function
# fillCol(height = 600, flex = c(NA, 1),
#    inputPanel(
#      selectInput(ns("region"), "Region:", choices = colnames(WorldPhones))
#    ),
#    plotOutput(ns("phonePlot"), height = "100%")
#  )
### Country selection
pickerInput(
inputId = 'country',
label = 'Country:',
choices = c("Argentina", "Brazil", "Mexico"),
#choices = sort(unique(static.data$year)),
#selected =sort(unique(static.data$year)),
options = list(
`actions-box` = TRUE,
size = 10,
`selected-text-format` = "count > 3"
),
multiple = TRUE
)
### Select Poverty Line
selectInput(
inputId = 'line',
label = 'Line:',
#choices = sort(unique(static.data$country)
choices = c("$1.9 (2011 PPP)","$3.2 (2011 PPP)", "$5.5 (2011 PPP)")
)
### Select Indicator
selectInput(
inputId = 'indicator',
label = 'Indicator:',
#choices = sort(unique(static.data$country)
choices = c("Poverty Rate","Poverty Gap")
)
### Select Poverty Line
selectInput(
inputId = 'zone',
label = 'Zone:',
#choices = sort(unique(static.data$country)
choices = c("National","Urban", "Rural")
)
# Chunk 3
#"<b>for</b>"
#sdev.p <- reactive ({
#              b.data %>%
#                  filter(
#                      case == "SD",
#                      variable == input$vr,
#                      acronym ==input$ct,
#                      year %in% input$yr,
#                      Modulo %in% input$md
#                  )
#          })
#renderPlotly({
# p<-ggplot(data, aes(year,percent,group=period)) +
#geom_point(aes(colour = period), size = 1.5) +
#geom_line(aes(colour = period), size = 1) +
#theme(plot.title = element_text(hjust=0.5)) +
#    labs(title=paste(input$indicator,":",input$zone, input$country), x = "", y = "Percent %") +
#   ggplotly(p)
#})
# Chunk 4
### Country selection
selectInput(
inputId = 'country',
label = 'Country:',
# choices = sort(unique(static.data$country)
choices = c("Argentina", "Brazil", "Mexico")
)
pickerInput(
inputId = 'line',
label = 'Line:',
choices = c("$1.9 (2011 PPP)","$3.2 (2011 PPP)", "$5.5 (2011 PPP)"),
#choices = sort(unique(static.data$year)),
#selected =sort(unique(static.data$year)),
options = list(
`actions-box` = TRUE,
size = 10,
`selected-text-format` = "count > 3"
),
multiple = TRUE
)
### Select Indicator
selectInput(
inputId = 'indicator',
label = 'Indicator:',
#choices = sort(unique(static.data$country)
choices = c("Poverty Rate","Poverty Gap")
)
### Select Poverty Line
selectInput(
inputId = 'zone',
label = 'Zone:',
#choices = sort(unique(static.data$country)
choices = c("National","Urban", "Rural")
)
library(readxl)
Headcount_table_data <- read_excel("~/R/Headcount_table_data.xlsx")
View(Headcount_table_data)
pov.data <- read_excel("~/R/Headcount_table_data.xlsx")
View(pov.data)
#"<b>for</b>"
pov <- reactive ({
pov.data %>%
filter(
Countryname %in% input$country,
Pline == input$line,
Indicator == input$indicator,
Zone == input$zone
)
})
renderPlotly({
p<- ggplot(pov(), aes(Year,Rate,group=line)) +
geom_point(aes(colour = line), size = 1.5) +
# geom_line(aes(colour = line), size = 1) +
#  theme(plot.title = element_text(hjust=0.5)) +
#labs(title=paste(input$indicator,":",input$zone, input$country), x = "", y = "Percent %") +
ggplotly(p)
})
class(pov.data)
ggplot(pov.data,aes(Year,Rate))
library(ggplot2)
p<-ggplot(pov.data, aes(Year,Rate)) +
geom_point(aes(colour = line), size = 1.5) +
geom_line(aes(colour = line), size = 1)
theme(plot.title = element_text(hjust=0.5)
library(ggplot2)
p<-ggplot(pov.data, aes(Year,Rate)) +
geom_point(aes(colour = line), size = 1.5) +
geom_line(aes(colour = line), size = 1) +
theme(plot.title = element_text(hjust=0.5))
p
p<-ggplot(pov.data, aes(Year,Rate)) + geom_point()
p
p<-ggplot(pov.data, aes(Year,Rate),group=1) + geom_point()
p
p<-ggplot(pov.data, aes(Year,Rate),group=1) + geom_point(aes(colour = line), size = 1)
p
p<-ggplot(pov.data, aes(Year,Rate),group=1) + geom_point(aes(colour = Pline), size = 1)
p
p<-ggplot(pov.data, aes(Year,Rate),group=1) +
geom_point(aes(colour = Pline), size = 1) +
geom_line(aes(colour = Pline), size = 1) +
p<-ggplot(pov.data, aes(Year,Rate),group=1) +
geom_point(aes(colour = Pline), size = 1) +
geom_line(aes(colour = Pline), size = 1)
p
p<-ggplot(pov.data, aes(Year,Rate),group=Pline) +
geom_point(aes(colour = Pline), size = 1) +
geom_line(aes(colour = Pline), size = 1) +
theme(plot.title = element_text(hjust=0.5))
p
library(tidyverse)
library(ggplot2)
pov<- pov.data %>%
filter(
Countryname %in% c("Mexico","Argenina","Mexico"),
Pline == "Poverty $1.9 (2011 PPP)",
Indicator == "Poverty rate",
Zone == "National"
)
pov
p<-ggplot(pov, aes(Year,Rate),group=Countryname) +
geom_point(aes(colour = Pline), size = 1) +
geom_line(aes(colour = Pline), size = 1) +
theme(plot.title = element_text(hjust=0.5))
p
p<-ggplot(pov, aes(Year,Rate),group=Countryname) +
geom_point(aes(colour = Countryname), size = 1) +
geom_line(aes(colour = Countryname), size = 1) +
theme(plot.title = element_text(hjust=0.5))
p
#"<b>for</b>"
pov <- reactive ({
pov.data %>%
filter(
Countryname %in% input$country,
Pline == input$line,
Indicator == input$indicator,
Zone == input$zone
)
})
renderPlotly({
p<- ggplot(pov(), aes(Year,Rate),group=Countryname) +
geom_point(aes(colour = Countryname), size = 1.5) +
geom_line(aes(colour = Countryname), size = 1) +
theme(plot.title = element_text(hjust=0.5))
#labs(title=paste(input$indicator,":",input$zone, input$country), x = "", y = "Percent %") +
ggplotly(p)
})
library(tidyverse)
library(ggplot2)
pov<- pov.data %>%
filter(
Countryname %in% c("Mexico","Argentina","Chile"),
Pline == "Poverty $1.9 (2011 PPP)",
Indicator == "Poverty rate",
Zone == "National"
)
p<-ggplot(pov, aes(Year,Rate),group=Countryname) +
geom_point(aes(colour = Countryname), size = 1) +
geom_line(aes(colour = Countryname), size = 1) +
theme(plot.title = element_text(hjust=0.5))
p
pov<- pov.data %>%
filter(
Countryname %in% c("Mexico","Brazil","Chile"),
Pline == "Poverty $1.9 (2011 PPP)",
Indicator == "Poverty rate",
Zone == "National"
)
p<-ggplot(pov, aes(Year,Rate),group=Countryname) +
geom_point(aes(colour = Countryname), size = 1) +
geom_line(aes(colour = Countryname), size = 1) +
theme(plot.title = element_text(hjust=0.5))
p
pov<- pov.data %>%
filter(
Countryname %in% c("Mexico","Brazil","Chile"),
Pline == "Poverty $1.9 (2011 PPP)",
Indicator == "Poverty rate",
Zone == "National"
)
p<-ggplot(pov, aes(Year,Rate),group=Countryname) +
geom_point(aes(colour = Countryname), size = 1.5) +
geom_line(aes(colour = Countryname), size = 1.5) +
theme(plot.title = element_text(hjust=0.5))
p
pov.data <- read_excel("~/R/Headcount_table_data.xlsx")
class(pov.data)
head(pov.data)
class(pov.data$Year)
?as.Date
pov.data$Year<-as.Date(pov.data$Year)
pov.data <- distinct(read_excel("~/R/Headcount_table_data.xlsx"))
pov.data$Year<-as.Date(pov.data$Year)
class(pov.data$Year)
pov.data$Year<-as.character(pov.data$Year)
class(pov.data$Year)
sort(pov.data)
